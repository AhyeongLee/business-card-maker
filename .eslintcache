[{"/Users/awscloud/Documents/VSCode/business-card-maker/src/components/app/app.jsx":"1","/Users/awscloud/Documents/VSCode/business-card-maker/src/components/editor/edit_form.jsx":"2","/Users/awscloud/Documents/VSCode/business-card-maker/src/components/login/login.jsx":"3","/Users/awscloud/Documents/VSCode/business-card-maker/src/components/header/header.jsx":"4","/Users/awscloud/Documents/VSCode/business-card-maker/src/index.js":"5","/Users/awscloud/Documents/VSCode/business-card-maker/src/components/main/main.jsx":"6","/Users/awscloud/Documents/VSCode/business-card-maker/src/components/card_maker/card_maker.jsx":"7","/Users/awscloud/Documents/VSCode/business-card-maker/src/components/footer/footer.jsx":"8","/Users/awscloud/Documents/VSCode/business-card-maker/src/service/firebase/login.js":"9","/Users/awscloud/Documents/VSCode/business-card-maker/src/components/loading/loading.jsx":"10","/Users/awscloud/Documents/VSCode/business-card-maker/src/components/card/card.jsx":"11","/Users/awscloud/Documents/VSCode/business-card-maker/src/service/firebase/database.js":"12","/Users/awscloud/Documents/VSCode/business-card-maker/src/service/cloudinary/image.js":"13"},{"size":828,"mtime":1611196325267,"results":"14","hashOfConfig":"15"},{"size":3276,"mtime":1611190724525,"results":"16","hashOfConfig":"15"},{"size":2283,"mtime":1611213195871,"results":"17","hashOfConfig":"15"},{"size":1299,"mtime":1611215513745,"results":"18","hashOfConfig":"15"},{"size":1394,"mtime":1611210190763,"results":"19","hashOfConfig":"15"},{"size":3317,"mtime":1611215525644,"results":"20","hashOfConfig":"15"},{"size":1154,"mtime":1611212685349,"results":"21","hashOfConfig":"15"},{"size":559,"mtime":1611190823281,"results":"22","hashOfConfig":"15"},{"size":2234,"mtime":1611128127964,"results":"23","hashOfConfig":"15"},{"size":323,"mtime":1611033958395,"results":"24","hashOfConfig":"15"},{"size":3650,"mtime":1611212605637,"results":"25","hashOfConfig":"15"},{"size":1612,"mtime":1611208503832,"results":"26","hashOfConfig":"15"},{"size":572,"mtime":1611209876575,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dtqqc",{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/Users/awscloud/Documents/VSCode/business-card-maker/src/components/app/app.jsx",[],"/Users/awscloud/Documents/VSCode/business-card-maker/src/components/editor/edit_form.jsx",["57","58"],"import React, { useRef, useState, memo } from 'react';\nimport styles from './edit_form.module.css';\n\nconst themes = ['default', 'black', 'green', 'gradient'];\nconst EditForm = memo((props) => {\n\n\n    const handleChangeInput = (e) => {\n        props.onChangeInput(e.target.name, e.target.value);\n    }\n    \n    const handleRadioBtn = (e) => {\n        e.target.dataset.for && props.onChangeInput('theme', e.target.dataset.for);\n    }\n\n    return (\n    <>\n        <div className={styles.container}>\n            <div className={`${styles.name} ${styles.input_container}`}>\n                <label htmlFor=\"name\" className={styles.label}>Name</label>\n                <input onChange={handleChangeInput} value={props.card.name} type=\"text\" name=\"name\" className={styles.input} />\n            </div>\n            <div className={styles.company}>\n                <label htmlFor=\"company\" className={styles.label}>Company</label>\n                <input onChange={handleChangeInput} type=\"text\" name=\"company\" value={props.card.company} className={styles.input} />\n            </div>\n            <div className={styles.role}>\n                <label htmlFor=\"role\" className={styles.label}>Role</label>\n                <input onChange={handleChangeInput} type=\"text\" name=\"role\" value={props.card.role} className={styles.input} />\n            </div>\n            <div className={styles.email}>\n                <label htmlFor=\"email\" className={styles.label}>E-Mail</label>\n                <input onChange={handleChangeInput} type=\"text\" name=\"email\" value={props.card.email} className={styles.input}/>\n            </div>\n            <div className={styles.descriptions}>\n                <label htmlFor=\"descriptions\" className={styles.label}>Descriptions</label>\n                <input onChange={handleChangeInput} type=\"text\" name=\"descriptions\" value={props.card.descriptions} className={styles.input} />\n            </div>\n            <div className={styles.theme}>\n                <div className={styles.label}>Card Theme</div>\n                <div className={styles.radios} onClick={handleRadioBtn}>\n                {\n                    themes.map(theme => {\n                        if(theme === props.card.theme) {\n                            return (\n                                <div key={`${props.card.key}-${theme}`} className={styles.radio_container}>\n                                    <div className={`${styles.radio_btn} ${styles.checked}`} data-for={theme}></div>\n                                    <label className={styles.label} data-for={theme}>{theme}</label>\n                                </div>\n                            )\n                        }\n                        else {\n                            return (\n                                <div key={`${props.card.key}-${theme}`} className={styles.radio_container}>\n                                    <div className={styles.radio_btn} data-for={theme}></div>\n                                    <label className={styles.label}>{theme}</label>\n                                </div>\n                            )\n                        }\n                        \n                    })\n                }\n                </div>\n            </div>\n        </div>\n    </>\n)});\n\nexport default EditForm;","/Users/awscloud/Documents/VSCode/business-card-maker/src/components/login/login.jsx",["59","60","61","62"],"/Users/awscloud/Documents/VSCode/business-card-maker/src/components/header/header.jsx",["63"],"/Users/awscloud/Documents/VSCode/business-card-maker/src/index.js",[],"/Users/awscloud/Documents/VSCode/business-card-maker/src/components/main/main.jsx",["64","65","66"],"/Users/awscloud/Documents/VSCode/business-card-maker/src/components/card_maker/card_maker.jsx",["67"],"/Users/awscloud/Documents/VSCode/business-card-maker/src/components/footer/footer.jsx",["68","69"],"/Users/awscloud/Documents/VSCode/business-card-maker/src/service/firebase/login.js",[],"/Users/awscloud/Documents/VSCode/business-card-maker/src/components/loading/loading.jsx",[],"/Users/awscloud/Documents/VSCode/business-card-maker/src/components/card/card.jsx",[],"/Users/awscloud/Documents/VSCode/business-card-maker/src/service/firebase/database.js",["70"],"import 'firebase/database';\n\nclass Database {\n    constructor(firebase) {\n        this.firebase = firebase\n    }\n    writeNewCard = async (userId, card) => {\n        const cardListRef = this.firebase.database().ref('/users/' + userId + '/cards/');\n        const newCardRef = cardListRef.push();\n        card.key = newCardRef.key;\n        console.log(card);\n        await newCardRef.set(card);\n    }\n    removeCard = async (userId, cardKey) => {\n        const cardToRemove = this.firebase.database().ref('/users/' + userId + '/cards/' + cardKey);\n        await cardToRemove.remove();\n    }\n    readCards = (userId, setCards) => {\n        return this.firebase.database().ref('/users/' + userId)\n        .on('value', (snapshot) => {\n            const cards = snapshot.val();\n            if (cards) {\n                setCards(Object.values(cards.cards));\n            } else {\n                setCards([]);\n            }\n        });\n    }\n    updateCard = (userId, property, cardKey, value) => {\n        let update;\n        switch(property) {\n            case 'photo': update={photo: value}; break;\n            case 'name': update={name: value}; break;\n            case 'company': update={company: value}; break;\n            case 'role': update={role: value}; break;\n            case 'email': update={email: value}; break;\n            case 'descriptions': update={descriptions: value}; break;\n            case 'theme': update={theme: value}; break;\n\n        }\n        console.log(update);\n        this.firebase.database().ref('/users/' + userId + '/cards/' + cardKey).update(update);\n    }\n}\n\nexport default Database;","/Users/awscloud/Documents/VSCode/business-card-maker/src/service/cloudinary/image.js",[],["71","72"],{"ruleId":"73","severity":1,"message":"74","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":23},{"ruleId":"73","severity":1,"message":"77","line":1,"column":25,"nodeType":"75","messageId":"76","endLine":1,"endColumn":33},{"ruleId":"73","severity":1,"message":"77","line":1,"column":28,"nodeType":"75","messageId":"76","endLine":1,"endColumn":36},{"ruleId":"73","severity":1,"message":"78","line":4,"column":10,"nodeType":"75","messageId":"76","endLine":4,"endColumn":14},{"ruleId":"79","severity":1,"message":"80","line":18,"column":8,"nodeType":"81","endLine":18,"endColumn":10,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":43,"column":21,"nodeType":"85","endLine":43,"endColumn":88},{"ruleId":"86","severity":1,"message":"87","line":33,"column":21,"nodeType":"85","endLine":33,"endColumn":77},{"ruleId":"79","severity":1,"message":"88","line":24,"column":8,"nodeType":"81","endLine":24,"endColumn":10,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":37,"column":26,"nodeType":"92","messageId":"93","endLine":37,"endColumn":28},{"ruleId":"94","severity":1,"message":"95","line":38,"column":17,"nodeType":"96","messageId":"97","endLine":47,"endColumn":18},{"ruleId":"73","severity":1,"message":"77","line":1,"column":25,"nodeType":"75","messageId":"76","endLine":1,"endColumn":33},{"ruleId":"73","severity":1,"message":"74","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":23},{"ruleId":"73","severity":1,"message":"98","line":3,"column":8,"nodeType":"75","messageId":"76","endLine":3,"endColumn":14},{"ruleId":"94","severity":1,"message":"95","line":31,"column":9,"nodeType":"96","messageId":"97","endLine":40,"endColumn":10},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'hasNoSession', 'hasSession', and 'props.loginService'. Either include them or remove the dependency array.","ArrayExpression",["103"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'history' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["104"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'imgSrc' is defined but never used.","no-native-reassign",["105"],"no-negated-in-lhs",["106"],{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [hasNoSession, hasSession, props.loginService]",{"range":"111","text":"112"},"Update the dependencies array to be: [history, props]",{"range":"113","text":"114"},[540,542],"[hasNoSession, hasSession, props.loginService]",[754,756],"[history, props]"]